[
  {
    "title": "Debounce Function",
    "description": "A function that delays invoking a callback until after a certain amount of time has passed without it being called.",
    "author": "YourGitHubUsername",
    "language": "JavaScript",
    "tags": ["functions", "performance", "events"],
    "code": "function debounce(func, timeout = 300){\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => { func.apply(this, args); }, timeout);\n  };\n}"
  },
  {
    "title": "Center a Div",
    "description": "The simplest way to center an element horizontally and vertically inside its parent container using modern CSS.",
    "author": "AnotherUser",
    "language": "CSS",
    "tags": ["layout", "centering", "grid"],
    "code": ".parent-container {\n  display: grid;\n  place-items: center;\n}"
  },
  {
    "title": "Throttle Function",
    "description": "A function that ensures a callback is executed at most once per specified time period, preventing rapid-fire execution.",
    "author": "Aarzoo Islam",
    "language": "JavaScript",
    "tags": ["functions", "performance", "events", "rate-limiting"],
    "code": "function throttle(func, limit) {\n  let inThrottle;\n  return function (...args) {\n    if (!inThrottle) {\n      func.apply(this, args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n}"
  },
  {
    "title": "Debounce Function",
    "description": "A TypeScript function that delays invoking a callback until after a specified time has passed without it being called.",
    "author": "YourGitHubUsername",
    "language": "TypeScript",
    "tags": ["functions", "performance", "events", "typescript"],
    "code": "export function debounce<T extends (...args: any[]) => void>(\n  func: T,\n  timeout = 300\n): (...args: Parameters<T>) => void {\n  let timer: ReturnType<typeof setTimeout> | null;\n\n  return (...args: Parameters<T>): void => {\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(null, args);\n    }, timeout);\n  };\n}"
  },
  {
    "title": "Throttle Function",
    "description": "A TypeScript function that ensures a callback is executed at most once per specified time period, preventing rapid-fire execution.",
    "author": "Aarzoo Islam",
    "language": "TypeScript",
    "tags": [
      "functions",
      "performance",
      "events",
      "rate-limiting",
      "typescript"
    ],
    "code": "export function throttle<T extends (...args: any[]) => void>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  let inThrottle = false;\n\n  return (...args: Parameters<T>): void => {\n    if (!inThrottle) {\n      func.apply(null, args);\n      inThrottle = true;\n      setTimeout(() => {\n        inThrottle = false;\n      }, limit);\n    }\n  };\n}"
  },
  {
  "title": "Box Shadow",
  "description": "Easily add a subtle shadow to any element to make it stand out and give depth to your design.",
  "author": "Bhavya0420",
  "language": "CSS",
  "tags": ["design", "ui", "shadow", "effects"],
  "code": "box-shadow {\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}"
}
]
